# server configuration
server:
  port: 9900
  error:
    whitelabel:
      enabled: false
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/shanoir_ng_datasets?useLegacyDatetimeCode=false&serverTimezone=Europe/Paris&characterEncoding=utf-8&useSSL=false
    username: shanoir
    password: shanoir
    # The SQL dialect makes Hibernate generate better SQL for the chosen database
    driver-class-name: com.mysql.jdbc.Driver
    initialize: false
  jackson:
    mapper:
      use-getters-as-setters: false
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: validate
      # Naming strategy
      naming:
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        connection:
          charset: UTF-8
        hbm2ddl:
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
  jooq:
    sql-dialect: Mysql
  rabbitmq:
    host: shanoir-ng-rabbitmq
  session:
    store-type: none
front.server.url: http://shanoir-ng-nginx
#keycloak
keycloak:
  cors: true
  realm: shanoir-ng
  auth-server-url: http://shanoir-ng-nginx/auth
  ssl-required: external
  resource: shanoir-ng-datasets
  securityConstraints[0]:
    securityCollections[0]:
      name: spring secured api
      authRoles: 
        - ROLE_ADMIN
        - ROLE_EXPERT
        - ROLE_GUEST
        - ROLE_USER
      patterns:
        - /*
# microservices url
ms.url:
  shanoir-ng-studies: http://shanoir-ng-studies/
# logging configuration
logging:
  file: /vol/log/ms/shanoir-ng-dataset.log
  level:
    org.springframework.web: ERROR
    org.hibernate: ERROR
backup:
  dicom:
    server:
      host: localhost
      web:
        port: 8080

---

######################################
# DO NOT COMMIT VALUES MODIFICATIONS #
######################################
spring:
  profiles: dev
  datasource:
    url: jdbc:mysql://localhost:3306/shanoir_ng_datasets?useLegacyDatetimeCode=false&serverTimezone=Europe/Paris&characterEncoding=utf-8&useSSL=false
    username: root
    password: 
    # The SQL dialect makes Hibernate generate better SQL for the chosen database
    driver-class-name: com.mysql.jdbc.Driver
    data: classpath:/scripts/import.sql
    initialize: true
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: create-drop
    # Show or not log for each sql query
    show-sql: true
  jooq:
    sql-dialect: Mysql
  rabbitmq:
    host: localhost
server:
    port: 9906
front.server.url: http://localhost:8080
#keycloak
keycloak:
  auth-server-url: http://localhost/auth
  credentials:
    secret: 3e35c819-aa43-4fd6-a8dc-9dbe75834e40
# microservices url
ms.url:
  shanoir-ng-studies: http://localhost:9902/
# logging configuration
logging:
  file: c:\\Temp\\shanoir-ng\\shanoir-ng-dataset.log
  level:
    org.springframework.web: DEBUG
    org.hibernate: ERROR

---

#################
# DO NOT CHANGE #
#################
spring:
  profiles: test
  datasource:
    url: jdbc:h2:mem:SHANOIR_NG_DATASETS;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    data: classpath:/scripts/test-data-h2.sql
    initialize: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: create

---

#################
# DO NOT CHANGE #
#################
spring:
  profiles: qualif,prod
  datasource:
    initialize: false
  jpa:
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: validate
  rabbitmq:
    host: shanoir-ng-rabbitmq
#keycloak
keycloak:
  auth-server-url: SHANOIR_SERVER_URL/auth
# microservices url
ms.url:
  shanoir-ng-studies: http://DOCKER_PREFIX-ng-studies:9900/
