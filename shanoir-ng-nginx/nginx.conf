
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    #tcp_nopush on;

    keepalive_timeout 65;

    #gzip on;
    
    upstream shanoir-ng-keycloak-server {
 		server shanoir-ng-keycloak:8080;
	}
    
    upstream shanoir-server {
 		server shanoir-server:8080;
	}
    
    upstream shanoir-ng-users-server {
 		server shanoir-ng-users:9900;
	}
    
    upstream shanoir-ng-centers-server {
 		server shanoir-ng-centers:9900;
	}
    
    server {
		listen *:80;
		server_name "";
		
		# these two parameters are needed to allow importing large dataset
		client_max_body_size 1000M;
		proxy_read_timeout 1000s;
		
		# static files for all requests for /*
		location /shanoir-ng/ {
			alias   /etc/nginx/html/;
        	index  index.html;
        	try_files $uri$args $uri$args/ $uri $uri/ /index.html =404;
		}
		
		# forward (reverse-proxy) all requests for /shanoir-ng/keycloak/* to the Keycloak server
		location /auth/ {
			proxy_pass http://shanoir-ng-keycloak-server/auth/;
		    proxy_set_header        Host $host;
		    proxy_set_header        X-Real-IP $remote_addr;
		    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		    proxy_set_header        X-Forwarded-Proto $scheme;
		    proxy_set_header        X-Forwarded-Host $host;
		    proxy_set_header        X-Forwarded-Server $http_host;
		}
		
		# forward (reverse-proxy) all requests for /shanoir-ng/users/* to the API gateway Zuul
		location /shanoir-ng/users/ {
			proxy_pass http://shanoir-ng-users-server/;
			proxy_buffering off;
		}
		
		# forward (reverse-proxy) all requests for /shanoir-ng/centers/* to the API gateway Zuul
		location /shanoir-ng/centers/ {
			proxy_pass http://shanoir-ng-centers-server/;
			proxy_buffering off;
		}
		
		# forward (reverse-proxy) Shanoir old login page to Keycloak login page
		location /Shanoir/login.seam {
			proxy_pass http://shanoir-ng-keycloak-server/auth/realms/shanoir-ng/protocol/saml/clients/shanoir-old;
		    proxy_set_header        Host $host;
		    proxy_set_header        X-Real-IP $remote_addr;
		    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		    proxy_set_header        X-Forwarded-Proto $scheme;
		    proxy_set_header        X-Forwarded-Host $host;
		    proxy_set_header        X-Forwarded-Server $http_host;
		}
		
		# forward (reverse-proxy) all requests for /Shanoir/* to the JBoss 4.2.3 server
		location /Shanoir/ {
			proxy_pass http://shanoir-server/Shanoir/;
			proxy_buffering off;
		}
    }
}