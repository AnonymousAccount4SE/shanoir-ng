user www-data;
worker_processes  1;

events {
    worker_connections  1024;
}

http {

	##
	## Basic Settings
	##
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	server_tokens off;

	include       /etc/nginx/mime.types;
	default_type  application/octet-stream;

	##
	## Gzip Settings
	##
	gzip on;
	gzip_disable "msie6";

	##
	## Logging Settings
	##
        error_log /var/log/nginx/error.log debug;
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;

	server {
		listen *:80;

		# these two parameters are needed to allow importing large dataset
		client_max_body_size 1000M;
		proxy_read_timeout 1000s;

		# do not buffer anything
		proxy_buffering off;

		# transform 502 errors (bad gateway) into 503 (service unavailable)
		error_page 502 =503 /shanoir-ng/503.html;

		#
		# static content	
		#
		# static files for all requests for /*preclinical
		location /shanoir-ng/ {
			alias   /etc/nginx/html/;
			index  index.html;
			try_files $uri$args $uri$args/ $uri $uri/ /index.html =404;
		}

		#
		# keycloak
		#
		# forward (reverse-proxy) all requests for /auth/* to the Keycloak server
		location /auth/ {
			proxy_pass 		http://keycloak:8080/auth/;
			proxy_set_header 	Host $http_host;
			# protect admin interface from outside access
			location = /auth/admin/ {
				return 404;
			}
		}

		#
		# shanoir ng (microservices)
		#
		# forward each subdirectory to the relevant microservice
		location /shanoir-ng/users/		{ proxy_pass http://users:9901/;	}
		location /shanoir-ng/studies/	{ proxy_pass http://studies:9902/;	}
		location /shanoir-ng/import/	{ proxy_pass http://import:9903/;	}
		location /shanoir-ng/datasets/	{ proxy_pass http://datasets:9904/;	}
		location /shanoir-ng/pacs/		{ proxy_pass http://dcm4chee-arc:8081/;	}
		location /shanoir-ng/preclinical/ { proxy_pass http://preclinical:9909/;	}
	}
}
