# server configuration
server:
  administrator.email: shanoir-dev-test@lists.gforge.inria.fr
  display-name: Shanoir
  error:
    whitelabel:
      enabled: false
  port: 9900
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/shanoir_ng_users?useLegacyDatetimeCode=false&serverTimezone=Europe/Paris&characterEncoding=utf-8&useSSL=false
    username: shanoir
    password: shanoir
    # The SQL dialect makes Hibernate generate better SQL for the chosen database
    driver-class-name: com.mysql.jdbc.Driver
    initialize: false
  jackson:
    mapper:
      use-getters-as-setters: false
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: validate
      # Naming strategy
      naming:
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        connection:
          charset: UTF-8
        hbm2ddl:
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
  jooq:
    sql-dialect: Mysql
  mail:
    host: SMTP_HOST
    port: 25
    properties:
      mail.smtp.from: do-not-reply@inria.fr
  rabbitmq:
    host: shanoir-ng-rabbitmq
  session:
    store-type: none
front.server:
  address: http://localhost/shanoir-ng/
  url: http://shanoir-ng-nginx
#keycloak
keycloak:
  auth-server-url: http://shanoir-ng-nginx/auth
  cors: true
  realm: shanoir-ng
  resource: shanoir-ng-users
  ssl-required: external
  securityConstraints:
    - authRoles: 
      - ROLE_ADMIN
      - ROLE_EXPERT
      - ROLE_GUEST
      - ROLE_USER
    - securityCollections:
      - name: user secured api
      - patterns:
        - /user/*
    - securityCollections:
      - name: role secured api
      - patterns:
        - /role/*
kc:
  host.name: shanoir-ng-keycloak
  requests:
    realm: master
    client.id: admin-cli
    admin:
      login: admin
      password: admin
# logging configuration
logging:
  file: /vol/log/ms/shanoir-ng-users.log
  level:
    org.springframework.web: ERROR
    org.hibernate: ERROR

---

######################################
# DO NOT COMMIT VALUES MODIFICATIONS #
######################################
spring:
  profiles: dev
  datasource:
    url: jdbc:mysql://database:3306/users?useLegacyDatetimeCode=false&serverTimezone=Europe/Paris&characterEncoding=utf-8&useSSL=false
    username: users
    password: password
    # The SQL dialect makes Hibernate generate better SQL for the chosen database
    driver-class-name: com.mysql.jdbc.Driver
    data: classpath:/scripts/import.sql
    initialize: true
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: create
    # Show or not log for each sql query
    show-sql: true
  jooq:
    sql-dialect: Mysql
  mail:
    host: localhost
  rabbitmq:
    host: rabbitmq
    port: 5672
server:
  port: 9901
front.server:
  address: http://shanoir-ng-nginx/shanoir-ng/
  url: http://shanoir-ng-nginx
#keycloak: attention: this config for the token issuer needs to match the domain of the frontend
# used for token creation AND the server url needs to be known from inside the docker network
keycloak:
  auth-server-url: http://shanoir-ng-nginx/auth
  credentials:
    secret: 785658bb-de94-49b4-89c6-4bb57f6e42ed
kc:
  host.name: keycloak
  requests:
    realm: master
    client.id: admin-cli
    admin:
      login: admin
      password: "&a1A&a1A"
# logging configuration
logging:
  file: /var/log/shanoir-ng-logs/shanoir-ng-users.log
  level:
    org.springframework.web: DEBUG
    org.hibernate: ERROR

---

#################
# DO NOT CHANGE #
#################
spring:
  profiles: test
  datasource:
    url: jdbc:h2:mem:SHANOIR_NG_USERS;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    data: classpath:/scripts/test-data-h2.sql
    initialize: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: create
  mail:
    host: localhost
    port: 3025

---

#################
# DO NOT CHANGE #
#################
spring:
  profiles: qualif,prod
  datasource:
    initialize: false
  jpa:
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: validate
  rabbitmq:
    host: shanoir-ng-rabbitmq
  mail:
    host: SMTP_HOST
    port: 25
    properties:
      mail.smtp.from: do-not-reply@inria.fr
server:
  administrator.email: SHANOIR_ADMIN_EMAIL
front.server:
  address: SHANOIR_SERVER_URL/
  url: SHANOIR_SERVER_URL
#keycloak
keycloak:
  auth-server-url: SHANOIR_SERVER_URL/auth
kc:
  host.name: shanoir-ng-keycloak
  requests:
    realm: master
    client.id: admin-cli
    admin:
      login:    KEYCLOAK_USER
      password: KEYCLOAK_PASSWORD
