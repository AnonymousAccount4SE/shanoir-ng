# TO BE CORRECTED AND VALIDATED
---
swagger: '2.0'
info:
  version: "1.0.0"
  title: Shanoir Challenge Scores Microservice
  description: Microservice API for the Shanoir challenge scores
  contact:
    url: http://shanoir.gforge.inria.fr/doku.php?id=en:us:contact
basePath: /challengeScores
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /score:
    post:
      description: Creates/overwrite a score set for a given subject + owner
      operationId: saveScoreSet
      parameters:
        -
          name: saveScoreParameters
          in: body
          description: Score set to save and parameters
          required: true
          type: object
          schema:
            $ref: '#/definitions/SaveScoreParams'
      responses:
        '201':
          description: score created
        '204':
          description: score overwritten
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      description: If exists, returns the score set for the given subject + owner
      operationId: findScoreSet
      produces:
        - application/json
      parameters:
        - name: subjectId
          in: body
          description: subject of the score set
          required: true
          type: long
          format: int64
        - name: ownerId
          in: body
          description: owner of the score set
          required: true
          type: long
          format: int64
      responses:
        '200':
          description: score set
          schema:
            $ref: '#/definitions/ScoreSet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      description: deletes a score set based on the given subject + owner
      operationId: deleteScoreSet
      parameters:
        - name: subjectId
          in: body
          description: subject of the score set
          required: true
          type: integer
          format: int64
        - name: ownerId
          in: body
          description: owner of the score set
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: score set deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /score/{datasetId}:
    put:
      description: Creates/overwrite a score set for the given dataset
      operationId: saveScoreSetByDatasetId
      parameters:
        - name: processingId
          in: path
          description: id of the dataset from which the score is computed
          required: true
          type: integer
          format: int64
        - name: scoreSet
          in: body
          description: Score set to save
          required: true
          schema:
            $ref: '#/definitions/ScoreSet'
      responses:
        '201':
          description: score created
        '204':
          description: score overwritten
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      description: If exists, returns the score set attached to the given dataset
      operationId: findScoreByDatasetId
      produces:
        - application/json
      parameters:
        - name: datasetId
          in: path
          description: id of the dataset parent of the score set
          required: true
          type: long
          format: int64
      responses:
        '200':
          description: score set
          schema:
            $ref: '#/definitions/ScoreSet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      description: deletes a single score set based on the given dataset id
      operationId: deleteScoreByDatasetId
      parameters:
        -
          name: id
          in: path
          description: id of the dataset from which to delete the score set
          required: true
          type: long
          format: int64
      responses:
        '204':
          description: score set deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /scores/{studyId}:
    get:
      description: Returns the scores attached to the given study
      operationId: findScoresByStudyId
      produces:
        - application/json
      parameters:
        -
          name: studyId
          in: path
          description: id of the study
          required: true
          type: long
          format: int64
      responses:
        '200':
          description: score matrix
          schema:
            $ref: '#/definitions/ChallengeScores'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /scores/xls/{studyId}:
    get:
      description: Returns the scores attached to the given study, as a Excel file
      operationId: getXLSScoresByStudyId
      produces:
        - binary
      parameters:
        -
          name: studyId
          in: path
          description: id of the study
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Challenge scores Excel file
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /metrics:
    get:
      description: Returns the metric list
      operationId: findAllMetrics
      produces:
        - application/json
      responses:
        '200':
          description: all metrics
          schema:
            type: array
            items:

        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /metric/{id}:
    put:
      description: Creates / updates a metric
      operationId: saveMetric
      parameters:
        - name: id
          in: path
          description: id of the metric
          required: true
          type: long
          format: int64
        - name: name
          in: body
          description: The name of the metric
          required: true
          type: string
        - name: NaN
          in: body
          description: What to do if a value for this metric is NaN, see ...
          required: false
          type: string
        - name: negInf
          in: body
          description: What to do if a value for this metric is a negative infinite, see ...
          required: false
          type: string
        - name: posInf
          in: body
          description: What to do if a value for this metric a positive infinite, see ...
          required: false
          type: string
      responses:
        '201':
          description: metric created
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      description: deletes a single metric based on its id
      operationId: deleteMetricById
      parameters:
        - name: id
          in: path
          description: id of the metric
          required: true
          type: long
          format: int64
      responses:
        '201':
          description: metric deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /metric:
    post:
      description: Creates a metric
      operationId: saveMetric
      parameters:
        - name: name
          in: body
          description: The name of the metric
          required: true
          type: string
        - name: NaN
          in: body
          description: What to do if a value for this metric is NaN, see ...
          required: false
          type: string
        - name: negInf
          in: body
          description: What to do if a value for this metric is a negative infinite, see ...
          required: false
          type: string
        - name: posInf
          in: body
          description: What to do if a value for this metric a positive infinite, see ...
          required: false
          type: string
      responses:
        '201':
          description: metric created
          schema:
            $ref: '#/definitions/Metric'
        '409':
          description: metric name already exists in database
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /subject/{subjectId}:
    put:
      description: Creates/updates a subject
      operationId: putSubject
      produces:
        - application/json
      parameters:
        - name: subjectId
          in: path
          description: id of the subject
          required: true
          type: integer
          format: int64
      responses:
        '201':
          description: subject created
        '204':
          description: subject overwritten
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
definitions:
  ScoreSet:
    type: array
    items:
      $ref: '#/definitions/Score'
  Score:
    type: object
    required:
      - metric
      - value
    properties:
      metric:
        type: string
      value:
        type: number
        format: float
  ChallengeScores:
    type: array
    items:
      $ref: '#/definitions/MetricChallengers'
  MetricChallengers:
    type: object
    required:
      - metricName
      - challengers
    properties:
      metricName:
        type: string
      challengers:
        type: array
        $ref: '#/definitions/ChallengerSubjects'
  ChallengerSubjects:
    type: object
    required:
      - challengerName
      - subjects
    properties:
      challengerName:
        type: string
      subjects:
        type: array
        $ref: '#/definitions/SubjectScore'
  SubjectScore:
    type: object
    required:
      - subjectName
      - score
    properties:
      subjectName:
        type: string
      score:
        type: number
        format: float
  Metric:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      NaN:
        type: string
      posInf:
        type: string
      negInf:
        type: string
  SaveScoreParams:
    type: object
    required:
      - subjectId
      - ownerId
      - scoreSet
    properties:
      subjectId:
        type: long
        format: int64
      ownerId:
        type: long
        format: int64
      scoreSet:
        type: object
        schema:
          $ref: '#/definitions/ScoreSet'
  ErrorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string